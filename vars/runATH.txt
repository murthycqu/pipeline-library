<p>
    Runs the <a href='https://github.com/jenkinsci/acceptance-test-harness'>Acceptance Test Harness</a> in a configurable way
</p>

<p>
    The configuration is divided into two parts, one related to the step itself and another related to how the ATH is run.
    To configure the step just use the step's parameters described below, to configure the ATH runs a metadata file (in YAML format)
    is used. Further sections describe the metadata file in detail. <b>Note that if the metadata file does not exist this step will do nothing at all</b>
</p>

<p>
The list of step's params and the related default values are:

<ul>
    <li>athUrl: The URL to get the ATH sources. It can point to a local path (by using the file:// protocol) or a github destination. Defaults to https://github.com/jenkinsci/acceptance-test-harness.git. <b>Can be overridden from the metadata file</b></li>
    <li>athRevision: The ATH revision to use, can be a branch or tag name or a commit id. Defaults to branch master. <b>Can be overridden from the metadata file</b></li>
    <li>metadataFile: A String indicating the file path (relative to the where this step is executed) to use as metadata file for the build, more details about the metadata file are provided belows. <b>Defaults to <i>essentials.yml</i> at the location where this step is invoked</b></li>
    <li>jenkins: URI to the jenkins.war, Jenkins version or one of "latest", "latest-rc", "lts" and "lts-rc". Defaults to "latest". For local war files use the file:// protocol in the URI. <b>Can be overriden from the metadata file</b></li>
</ul>

<pre>
    runATH(metadataFile:"metadata.yml", athRevision: "master", athUrl:"https://github.com/jenkinsci/acceptance-test-harness.git", jenkins: "2.110")
</pre>

<p>
    <b>Note that this step uses the <i>linux</i> and <i>docker && highmem</i> nodes in case that you need to run in different nodes
    you can use the env variables <i>RUN_ATH_SOURCES_AND_VALIDATION_NODE</i> and <i>RUN_ATH_DOCKER_NODE</i> respectively to overwrite
    the node to use</b>. If you need to specify more than one label just use a comma separated list of labels
    Nodes are allocated automatically by the step if needed, but if the step is already running in the appropriate node no allocation is done
    <b> Please note that this step is not able to manage complex labels and checks for them literally, so do not try to use labels like 'docker,(lowmemory&&linux)' as it will result in
    the step launching a new node as is unable to find the label '(lowmemory&&linux)' in the list of labels for the current node</b>
</p>

<p>
    To make it usable in PR builders this step allows users to run the ATH using custom (typically previously built in the same Jenkinsfile) versions of any plugin, for that you need to set the metadata file's <i>useLocalSnapshots</i> property to true and stash the
     plugins you want to use in the ATH run. By default you need to stash them with the name<i>localPlugins</i> the step will unstash them when appropriate and use the ATH`s <i>LOCAL_JARS</i> property to run the ATH. You can stash any number of plugins, all of
     them will be used. You can also stash under other name by setting the env variable <i>RUN_ATH_LOCAL_PLUGINS_STASH_NAME</i>
</p>

<pre>
    node("linux") {
        dir("sources") {
          checkout scm
          List<String> mavenEnv = [
                    "JAVA_HOME=${tool 'jdk8'}",
                    'PATH+JAVA=${JAVA_HOME}/bin',
                    "PATH+MAVEN=${tool 'mvn'}/bin"]
          withEnv(mavenEnv) {
            sh "mvn clean install -DskipTests"
          }
          dir("target") {
           stash includes: '*.hpi', name: 'localPlugins'
          }

          runATH(metadataFile:"metadata.yml", athRevision: "master")
        }
    }
</pre>

<pre>
    node("linux") {
        dir("sources") {
          checkout scm
          List<String> mavenEnv = [
                    "JAVA_HOME=${tool 'jdk8'}",
                    'PATH+JAVA=${JAVA_HOME}/bin',
                    "PATH+MAVEN=${tool 'mvn'}/bin"]
          withEnv(mavenEnv) {
            sh "mvn clean install -DskipTests"
          }
          dir("target") {
           stash includes: '*.hpi', name: 'snapshots'
          }

          env.RUN_ATH_LOCAL_PLUGINS_STASH_NAME="snapshots"
          runATH(metadataFile:"metadata.yml", athRevision: "master")
        }
    }
</pre>
<p>
    The metadata file is a YAML file with the following structure:
</p>

<pre>
---
ath:
  athUrl: https://github.com/jenkinsci/acceptance-test-harness.git
  athRevision: acceptance-test-harness-1.59
  jenkins: 2.89.4
  failFast: false
  rerunFailingTestsCount: 0
  useLocalSnapshots: true
  browsers:
    - firefox
    - chrome
  tests:
    - Test1
    - Test2
    - Test3
  categories:
    - Category1
    - Category2
</pre>

<p>
    Where:
</p>

<ul>
    <li>athUrl: (Optional) The URL to get the ATH sources. It can point to a local path or a github destination. If specified it will override the parameter in the runATH step</li>
    <li>athRevision: (Optional) The ATH revision to use can be a branch or tag name or a commit id. If specified it will override the parameter in the runATH step</li>
    <li>jenkins: (Optional) URI to the jenkins.war file, Jenkins version or one of "latest", "latest-rc", "lts" and "lts-rc". If specified it will override the parameter in the runATH step</li>
    <li>failFast: If the run has to fail fast or not. Defaults to false if not specified</li>
    <li>rerunFailingTestsCount: The number of runs per failing test (a la maven). Defaults to zero</li>
    <li>useLocalSnapshots: If the ATH should use local versions of the plugins. Defaults to true. <b>Note that if true the runATH expects the local plugins to be stashed, setting this to true without the stash will make the step fail</b></li>
    <li>browsers: The list of browsers to use when running ATH Defaults to firefox. <b>Note that currently only firefox browser is supported, any other will be ignored</b></li>
    <li>tests: The list of tests to run for the component that calls the step. If no particular set of tests or categories is defined the SmokeTest Category of the ATH will be run</li>
    <li>categories: The list of Categories to run. Defaults to nothing</li>
</ul>

<p>
    In case you want to use the defaults for all properties you can use
</p>

<pre>
---
ath: "default"
</pre>



